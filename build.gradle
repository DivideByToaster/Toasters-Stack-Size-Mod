plugins
{
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

base.archivesName = project.archives_base_name
group             = project.maven_group
version           = "${project.mod_version}+${project.minecraft_version}"

repositories
{
    // Mod Menu
    maven
    {
        url = "https://maven.terraformersmc.com/releases"
    }
}

dependencies
{
    minecraft         "com.mojang:minecraft:${project.minecraft_version}"
    mappings          "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources
{
    Map<String, Object> properties =
    [
        "version"               : version,
        "fabric_loader_version" : fabric_loader_version,
        "fabric_api_version"    : fabric_api_version,
        "minecraft_version"     : minecraft_version,
    ]
    filteringCharset "UTF-8"

    inputs.properties(properties)

    filesMatching("fabric.mod.json")
    {
        expand properties
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach
{
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible())
    {
        it.options.release.set(targetJavaVersion)
    }
}

java
{
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion)
    {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar
{
    from("LICENSE")
    {
        rename
        {
            "${it}_${project.archivesBaseName}"
        }
    }
}

// configure the maven publication
publishing
{
    publications
    {
        create("mavenJava", MavenPublication)
        {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories
    {
    }
}
